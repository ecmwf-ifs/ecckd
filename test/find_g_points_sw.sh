#!/bin/bash
# Find shortwave g points. This script requires variables TOLERANCE to
# contain a list of heating-rate tolerances (in K d-1) for each g
# point to be used, APPLICATION to be ONE of "climate", "global-nwp"
# or "limited-area-nwp", and BAND_STRUCTURE to contain a list from
# "fsck", "wide" and "narrow". These variables may be provided either
# as environment variables, or should be set in a script provided as
# the first argument to this script that is sourced at the start.

# Source the configuration and checking header scripts
. config.h
. check_configuration.h

# Optional additional arguments
#EXTRA_ARGS="averaging_method=logarithmic"
EXTRA_ARGS="averaging_method=total-transmission max_no_rayleigh_wavenumber=10000"

# Create output directory, if needed
mkdir -p ${WORK_SW_GPOINTS_DIR}

# Loop over each band structure and tolerance
for BANDSTRUCT in $BAND_STRUCTURE
do

O3_MIN_G_POINTS=""
H2O_BASE_SPLIT=""
if [ "$BANDSTRUCT" = "rgb" -o "$BANDSTRUCT" = "gb" ]
then
    # Need at least 3 g-points for ozone in the UV band
    O3_MIN_G_POINTS="min_g_points 1 1 1 1 3"
    # Need to split the base g-point of water vapour for accuracy
    H2O_BASE_SPLIT="base_split 0.34"
fi


# Create configuration file
if [ "$APP" = climate0 ]
then
    cat > config_find_g_points_sw_climate.cfg <<EOF
# THIS FILE WAS AUTOMATICALLY GENERATED BY $0
# Configuration file for generating g points for a radiation scheme to
# be used only for climate applications. Absorption spectra for each
# gas are reordered using present-day concentrations, setting the
# concentrations of all other gases also to the minimum over the range
# to be simulated. All well-mixed gases are combined into a single
# hybrid gas.

append_path "${MMM_SW_SPECTRA_DIR}:${WORK_SW_SPECTRA_DIR}:${WORK_SW_ORDER_DIR}"
ssi $MMM_SW_SSI
iprofile 0
averaging_method "total-transmission"
#tolerance_tolerance 0.01 
tolerance_tolerance 0.02
#flux_weight 0.02
flux_weight 0.0002
min_pressure ${MIN_PRESSURE}
max_iterations 60

gases composite h2o o3

\begin h2o
  # Water vapour in median present-day concentrations
  input ckdmip_mmm_sw_spectra_h2o_median.h5
  reordering_input sw_order_${BANDSTRUCT}_h2o.h5
  # Other gases in present-day concentrations, except ozone which uses
  # the minimum concentration
  background_input "ckdmip_mmm_sw_spectra_composite_minimum.h5
            ckdmip_mmm_sw_spectra_o3_minimum.h5"
  min_scaling 0.1
  max_scaling 10.0
  $H2O_BASE_SPLIT
\end h2o

\begin o3
  input ckdmip_mmm_sw_spectra_o3_median.h5
  reordering_input sw_order_${BANDSTRUCT}_o3.h5
  background_input "ckdmip_mmm_sw_spectra_composite_minimum.h5
            ckdmip_mmm_sw_spectra_h2o_minimum.h5"
  min_scaling 0.5
  max_scaling 2.0
  $O3_MIN_G_POINTS
\end o3

\begin composite
  input ckdmip_mmm_sw_spectra_composite_present.h5
  reordering_input sw_order_${BANDSTRUCT}_composite.h5
  background_input "ckdmip_mmm_sw_spectra_h2o_minimum.h5
            ckdmip_mmm_sw_spectra_o3_minimum.h5"
\end composite

EOF

elif [ "$APP" = climate ]
then
    cat > config_find_g_points_sw_climate.cfg <<EOF
# THIS FILE WAS AUTOMATICALLY GENERATED BY $0
# Configuration file for generating g points for a radiation scheme to
# be used only for climate applications. Absorption spectra for each
# gas are reordered using present-day concentrations, setting the
# concentrations of all other gases also to the minimum over the range
# to be simulated. 

append_path "${MMM_SW_SPECTRA_DIR}:${WORK_SW_SPECTRA_DIR}:${WORK_SW_ORDER_DIR}"
ssi $MMM_SW_SSI
iprofile 0
averaging_method "transmission"
tolerance_tolerance 0.02
#flux_weight 0.001 # Previous
#flux_weight 0.0002
#flux_weight 0.2
flux_weight 0.1
min_pressure ${MIN_PRESSURE}
max_iterations 60

gases h2o o3 ch4 n2o co2 o2n2

\begin h2o
  # Water vapour in median present-day concentrations
  input ckdmip_mmm_sw_spectra_h2o_median.h5
  reordering_input sw_order_${BANDSTRUCT}_h2o.h5
  # Other gases in present-day concentrations, except ozone which uses
  # the minimum concentration
  background_input "ckdmip_mmm_sw_spectra_composite_minimum.h5
ckdmip_mmm_sw_spectra_o3_minimum.h5"
  min_scaling 0.1
  max_scaling 10.0
#  min_scaling 0.025
#  max_scaling 40.0
  $H2O_BASE_SPLIT
\end h2o

\begin o3
  input ckdmip_mmm_sw_spectra_o3_median.h5
  reordering_input sw_order_${BANDSTRUCT}_o3.h5
  background_input "ckdmip_mmm_sw_spectra_composite_minimum.h5
ckdmip_mmm_sw_spectra_h2o_minimum.h5"
  min_scaling 0.5
  max_scaling 2.0
  $O3_MIN_G_POINTS
\end o3

\begin co2
  input ckdmip_mmm_sw_spectra_co2_present.h5
  reordering_input sw_order_${BANDSTRUCT}_co2.h5
  background_input "ckdmip_mmm_sw_spectra_h2o_minimum.h5
ckdmip_mmm_sw_spectra_o3_minimum.h5
ckdmip_mmm_sw_spectra_ch4_present.h5
ckdmip_mmm_sw_spectra_n2o_present.h5
ckdmip_mmm_sw_spectra_o2n2_constant.h5"
  background_conc -1 -1 350e-9 190e-9 -1
  min_scaling 0.43
  max_scaling 5.4
\end co2

\begin ch4
  input ckdmip_mmm_sw_spectra_ch4_present.h5
  reordering_input sw_order_${BANDSTRUCT}_ch4.h5
  background_input "ckdmip_mmm_sw_spectra_h2o_minimum.h5
ckdmip_mmm_sw_spectra_o3_minimum.h5
ckdmip_mmm_sw_spectra_co2_present.h5
ckdmip_mmm_sw_spectra_n2o_present.h5
ckdmip_mmm_sw_spectra_o2n2_constant.h5"
  background_conc -1 -1 180e-6 190e-9 -1
  min_scaling 1.8
  max_scaling 0.18
\end ch4

\begin n2o
  input ckdmip_mmm_sw_spectra_n2o_present.h5
  reordering_input sw_order_${BANDSTRUCT}_n2o.h5
  background_input "ckdmip_mmm_sw_spectra_h2o_minimum.h5
ckdmip_mmm_sw_spectra_o3_minimum.h5
ckdmip_mmm_sw_spectra_co2_present.h5
ckdmip_mmm_sw_spectra_ch4_present.h5
ckdmip_mmm_sw_spectra_o2n2_constant.h5"
  background_conc -1 -1 180e-6 350e-9 -1
  min_scaling 1.6
  max_scaling 0.57
\end n2o

\begin o2n2
  input ckdmip_mmm_sw_spectra_o2n2_constant.h5
  reordering_input sw_order_${BANDSTRUCT}_o2n2.h5
  background_input "ckdmip_mmm_sw_spectra_h2o_minimum.h5
ckdmip_mmm_sw_spectra_o3_minimum.h5
ckdmip_mmm_sw_spectra_co2_present.h5
ckdmip_mmm_sw_spectra_ch4_present.h5
ckdmip_mmm_sw_spectra_n2o_present.h5"
  background_conc -1 -1 180e-6 350e-9 190e-9
\end o2n2

EOF
elif [ "$APP" = nwp ]
then
    cat > config_find_g_points_sw_nwp.cfg <<EOF
# THIS FILE WAS AUTOMATICALLY GENERATED BY $0
# Configuration file for generating g points for a radiation scheme to
# be used only for NWP around the year 2020. Absorption spectra for
# each gas are reordered using present-day concentrations, setting the
# concentrations of all well-mixed gases also to present-day levels. All
# well-mixed gases ar combined into a single hybrid gas.

append_path "${MMM_SW_SPECTRA_DIR}:${WORK_SW_SPECTRA_DIR}:${WORK_SW_ORDER_DIR}"
ssi $MMM_SW_SSI
iprofile 0
averaging_method "transmission"
tolerance_tolerance 0.02
#flux_weight 0.005
#flux_weight 0.001 ### Previous
flux_weight 0.0002
min_pressure ${MIN_PRESSURE}
max_iterations 60

#gases rayleigh composite h2o o3
gases composite h2o o3

\begin h2o
  # Water vapour in median present-day concentrations
  input ckdmip_mmm_sw_spectra_h2o_median.h5
  reordering_input sw_order_${BANDSTRUCT}_h2o.h5
  # Other gases in present-day concentrations, except ozone which uses
  # the minimum concentration
  background_input "ckdmip_mmm_sw_spectra_composite_present.h5
            ckdmip_mmm_sw_spectra_o3_minimum.h5"
  min_scaling 0.1
  max_scaling 10.0
  $H2O_BASE_SPLIT
\end h2o

\begin o3
  input ckdmip_mmm_sw_spectra_o3_median.h5

  reordering_input sw_order_${BANDSTRUCT}_o3.h5
  background_input "ckdmip_mmm_sw_spectra_composite_present.h5
            ckdmip_mmm_sw_spectra_h2o_minimum.h5"
  min_scaling 0.5
  max_scaling 2.0
  $O3_MIN_G_POINTS
\end o3

\begin composite
  input ckdmip_mmm_sw_spectra_composite_present.h5
  reordering_input sw_order_${BANDSTRUCT}_composite.h5
  background_input "ckdmip_mmm_sw_spectra_h2o_minimum.h5
            ckdmip_mmm_sw_spectra_o3_minimum.h5"
\end composite

\begin rayleigh
  input ckdmip_mmm_sw_spectra_rayleigh_present.h5
  reordering_input sw_order_${BANDSTRUCT}_rayleigh.h5
  background_input "ckdmip_mmm_sw_spectra_h2o_minimum.h5
            ckdmip_mmm_sw_spectra_o3_minimum.h5
            ckdmip_mmm_sw_spectra_composite_present.h5"
\end rayleigh

EOF
else
    ${BANNER_ERROR} 'APP "'$APP'" not understood'
    exit 1
fi

    for TOL in $TOLERANCE
    do

	MODEL_CODE=${APPLICATION}_${BANDSTRUCT}-tol${TOL}${MODEL_CODE_SUFFIX}

	${BANNER} Finding g-points: $MODEL_CODE

	# Reduce the tolerance for the UV band of the RGB band
	# structure
	TOL_BAND=$TOL
	if [ "$BANDSTRUCT" = rgb ]
	then
	    TOL_BAND="$TOL $TOL $TOL $TOL $(echo $TOL/10.0 | bc -l)"
	elif [ "$BANDSTRUCT" = gb ]
	then
	    TOL_BAND="$TOL $TOL $TOL $TOL $(echo $TOL/15.0 | bc -l)"
	fi

	${FIND_G_POINTS} \
	    "heating_rate_tolerance=${TOL_BAND}" \
	    output=${WORK_SW_GPOINTS_DIR}/${ECCKD_PREFIX}_sw_gpoints_${MODEL_CODE}.h5 \
	    $EXTRA_ARGS config_find_g_points_sw_${APP}.cfg \
	    |& tee ${WORK_SW_GPOINTS_DIR}/${ECCKD_PREFIX}_sw_gpoints_${MODEL_CODE}.log
	# 2> debug_partition.m \
	# | tee ${WORK_SW_GPOINTS_DIR}/${ECCKD_PREFIX}_sw_gpoints_${MODEL_CODE}.log
	test "${PIPESTATUS[0]}" -eq 0
    done
done
